#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <3 4>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <3 4>;
            layers = <0>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC    &kp Q  &kp W     &kp E             &kp R             &kp T                            &kp Y  &kp U            &kp I      &kp O     &kp P       &kp BSPC
&kp TAB    &kp A  &kp S     &kp D             &kp F             &kp G                            &kp H  &kp J            &kp K      &kp L     &kp GRAVE   &kp RIGHT_CONTROL
&kp LSHFT  &kp Z  &kp X     &kp C             &kp V             &kp B                            &kp N  &kp M            &kp COMMA  &kp DOT   &caps_word  &kp RSHFT
                  &kp LALT  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &kp SPACE  &tog 2    &kp RETURN  &mo 3  &cap_sen 6 LCLK  &kp LBKT   &kp RBKT
            >;

            display-name = "Base";
        };

        ru {
            display-name = "Ru";
            bindings = <
&kp ESC    &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                        &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA      &kp RU_CYRILLIC_ZE   &kp BSPC
&kp TAB    &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                        &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE         &kp RU_CYRILLIC_ZHE  &kp RIGHT_CONTROL
&kp LSHFT  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                         &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU         &kp RU_CYRILLIC_E    &kp RSHFT
                                    &kp LALT              &kp LEFT_CONTROL    &kp LEFT_COMMAND    &kp SPACE           &tog 2    &kp RETURN  &mo 4               &cap_sen 6 MB1             &kp RU_CYRILLIC_HA   &kp RU_CYRILLIC_HARD_SIGN
            >;
        };

        nav {
            bindings = <
&trans  &kp N1  &kp N2    &kp N3         &kp N4         &kp N5                     &kp N6              &kp N7         &kp N8       &kp N9               &kp N0  &trans
&trans  &trans  &trans    &en LG(GRAVE)  &kp LG(SPACE)  &kp RET                    &kp LEFT            &kp DOWN       &kp UP       &kp RIGHT            &trans  &trans
&trans  &trans  &kp HOME  &kp INS        &kp END        &kp DEL                    &kp RA(LEFT_ARROW)  &kp PAGE_DOWN  &kp PAGE_UP  &kp RA(RIGHT_ARROW)  &trans  &trans
                &trans    &trans         &trans         &trans   &trans    &trans  &mo 5               &trans         &trans       &trans
            >;

            display-name = "Navigation";
        };

        sym_en {
            bindings = <
&trans  &kp HASH      &kp CARET     &kp EQUAL       &kp DOUBLE_QUOTES  &kp LEFT_BRACE                         &kp RIGHT_BRACE        &kp GRAVE         &kp EXCL          &kp DOLLAR  &kp BACKSLASH  &trans
&trans  &kp QUESTION  &kp ASTERISK  &kp UNDERSCORE  &kp DOT            &kp LEFT_PARENTHESIS                   &kp RIGHT_PARENTHESIS  &kp COMMA         &kp MINUS         &kp AMPS    &kp SLASH      &trans
&trans  &kp TILDE     &kp PLUS      &kp COLON       &kp LESS_THAN      &kp LEFT_BRACKET                       &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp SEMICOLON     &kp AT      &kp PIPE       &trans
                      &trans        &trans          &trans             &trans                &mo 5    &trans  &trans                 &trans            &kp SINGLE_QUOTE  &kp PRCNT
            >;

            display-name = "Symbols";
        };

        sym_ru {
            display-name = "Symbols";
            bindings = <
&trans  &en HASH      &en CARET     &kp EQUAL       &kp RU_DOUBLE_QUOTES  &en LEFT_BRACE                         &en RIGHT_BRACE        &en GRAVE         &kp EXCL          &en DOLLAR  &en BACKSLASH  &trans
&trans  &kp QUESTION  &en ASTERISK  &kp UNDERSCORE  &en DOT               &kp LEFT_PARENTHESIS                   &kp RIGHT_PARENTHESIS  &en COMMA         &kp MINUS         &en AMPS    &kp SLASH      &trans
&trans  &en TILDE     &kp PLUS      &en COLON       &en LESS_THAN         &en LEFT_BRACKET                       &en RIGHT_BRACKET      &en GREATER_THAN  &en SEMICOLON     &en AT      &en PIPE       &trans
                      &trans        &trans          &trans                &trans                &mo 5    &trans  &trans                 &trans            &en SINGLE_QUOTE  &en PRCNT
            >;
        };

        adj {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none    &none    &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "Adjust";
        };

        mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 7   &mkp MB3  &mkp MB2  &mkp MB1  &mo 8                     &mo 8   &mkp MB1  &mkp MB2  &mkp MB3  &mo 7   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            display-name = "Mouse";
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "Scroll";
        };

        sniper {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "Sniper";
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
