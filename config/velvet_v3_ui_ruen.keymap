#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        English {
            bindings = <
&kp ESC    &kp Q  &kp W   &kp E   &kp R   &kp T                     &kp Y   &kp U           &kp I   &kp O   &kp P   &kp BSPC
&kp TAB    &kp A  &kp S   &kp D   &kp F   &kp G                     &kp H   &kp J           &kp K   &kp L   &trans  &trans
&kp LSHFT  &kp Z  &kp X   &kp C   &kp V   &kp B                     &kp N   &kp M           &trans  &trans  &trans  &trans
                  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &cap_sen 5 MB1  &trans  &trans
            >;

            display-name = "en";
        };

        Russian {
            display-name = "ru";
            bindings = <
&kp ESC    &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp BSPC
&kp TAB    &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                    &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                     &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp RU_CYRILLIC_HA   &kp RU_CYRILLIC_HARD_SIGN
                                    &trans                &trans              &trans              &trans              &trans    &trans  &trans              &cap_sen 5 MB1             &trans               &trans
            >;
        };

        NavAndNum {
            bindings = <
&trans  &kp N1  &kp N2    &kp N3  &kp N4   &kp N5                    &kp N6  &kp N7    &kp N8    &kp N9     &kp N0  &trans
&trans  &trans  &trans    &trans  &trans   &trans                    &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans  &kp HOME  &trans  &kp END  &trans                    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
                &trans    &trans  &trans   &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            display-name = "nav-num";
        };

        Symbols {
            bindings = <
&trans  &kp HASH   &kp LT    &kp EQUAL  &kp GT    &kp GRAVE                    &kp CARET  &kp DQT   &kp UNDER  &kp SQT   &trans    &trans
&trans  &kp BSLH   &trans    &kp MINUS  &trans    &kp PLUS                     &kp PRCNT  &trans    &kp SEMI   &trans    &kp EXCL  &kp QUESTION
&trans  &kp COMMA  &kp STAR  &kp COLON  &kp FSLH  &kp DLLR                     &kp AT     &kp PIPE  &kp TILDE  &kp AMPS  &kp DOT   &trans
                   &trans    &trans     &trans    &trans     &trans    &trans  &trans     &trans    &trans     &trans
            >;

            display-name = "sym";
        };

        SystemAndFkeys {
            bindings = <
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4                     &kp PSCRN  &kp C_VOL_DN  &kp K_MUTE  &kp C_VOL_UP  &bt BT_SEL 0  &bt BT_SEL 1
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8                     &trans     &trans        &trans      &trans        &bt BT_SEL 2  &bt BT_SEL 3
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12                    &trans     &trans        &trans      &trans        &bt BT_CLR    &out OUT_TOG
                &trans  &trans   &trans   &trans   &trans    &trans  &trans     &trans        &trans      &trans
            >;

            display-name = "sys-fkeys";
        };

        Mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 6   &mkp MB3  &mkp MB2  &mkp MB1  &mo 7                     &mo 7   &mkp MB1  &mkp MB2  &mkp MB3  &mo 6   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            label = "mouse";
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "scroll";
        };

        Sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;

            label = "sniper";
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
